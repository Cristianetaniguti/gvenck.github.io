install_github("Cristianetaniguti/onemap")
library(onemap)
vcf2raw(input = system.file("extdata/vcf_example_out.vcf.gz", package = "onemap"),
output = "vcf_example_out.raw", parent1 = "P1", parent2 = "P2", cross = "outcross")
install_bitbucket("cris_taniguti/onemap2.2.git")
?install_bitbucket
install_bitbucket("cris_taniguti/onemap2.2.git", password = 1lDJEK1qDFDE)
install_bitbucket("cris_taniguti/onemap2.2.git", password = "1lDJEK1qDFDE")
install_bitbucket("cris_taniguti/onemap2.2", password = "1lDJEK1qDFDE")
library(onemap)
vcf2raw(input = system.file("extdata/vcf_example_out.vcf.gz", package = "onemap"),
output = "vcf_example_out.raw", parent1 = "P1", parent2 = "P2", cross = "outcross")
library(onemap)
library(devtools)
install_github("Cristianetaniguti/onemap")
library("asreml")
4774+772
15*300
4.5*26
250-2250
250-250
250-550
300/3
100*330
33000/15
300/7
42/15
15*40
700-250
450/7
64/15
library(asreml)
?asreml
yields <- c(13.906, 13.728, NA, 12.908, 13.848, 15.154, 15.151, 14.707,
12.938, 11.877, NA, 15.076, 11.680, 14.049, 13.696, 13.416,
12.340, 14.004, NA, 18.844, 14.029, 16.805, 15.630, 13.804,
16.277, 16.034, NA, 20.976, NA, 18.591, 17.431, 16.256,
17.055, 16.674, NA,19.087, 17.590, 21.145, 16.550, 17.188,
15.004, 14.767, NA, 16.302, 15.322, 16.886, 18.306, 17.694,
17.796, 15.583, NA, 18.390, 16.515, 18.879, 17.847, 18.211,
16.605, 15.280, NA, 16.397, 13.976, 15.616, 17.873, 17.366,
15.622, 11.539, NA, 15.227, 14.702, 17.086, 15.476, NA)
yields
cultivars <- c(8,14, 11, 3, 1, 16, 23, 10,
15, 12, 17, 6, 24, 2, 9, 13,
22, 5, 20, 21, 4, 7, 18, 19,
4, 9, 13, 22, 11, 3, 5, 2,
23, 21, 7, 10, 15, 12, 1, 20,
6, 16, 8, 24, 18, 19, 17, 14,
20, 18, 16, 1, 22, 13, 12, 6,
3, 10, 15, 9, 17, 14, 4, 7,
24, 2, 5, 19, 23, 21, 8, 11)
grrow <- rep(1:4, 9, each=2)
rows <- rep(1:8, 9)
repl <- c(rep(1, 3*8),  rep(2, 3*8), rep(3, 3*8))
columns <- c(rep(1, 8), rep(2, 8), rep(3, 8), rep(4, 8), rep(5, 8), rep(6, 8), rep(7, 8), rep(8, 8), rep(9, 8))
dados.mat <- data.frame(grrow, rows, repl, columns, cultivars, yields)
dados.mat$grrow <- as.factor(dados.mat$grrow)
dados.mat$rows <- as.factor(dados.mat$rows)
dados.mat$columns <- as.factor(dados.mat$columns)
dados.mat$repl <- as.factor(dados.mat$repl)
dados.mat$cultivars <- as.factor(dados.mat$cultivars)
summary(aov(yields ~ cultivars + grrow + grrow:rows + repl + repl:columns + grrow:repl + grrow:repl:rows + grrow:repl:columns + grrow:repl:rows:columns, dados.mat))
require(lme4)
mod.reml <- lmer(yields ~ cultivars + (1| grrow) + (1|grrow:rows) + (1|repl) + (1|repl:columns) +
(1|grrow:repl) + (1|grrow:repl:rows) + (1|grrow:repl:columns), data = dados.mat, REML = TRUE)
mod2.reml <- lmer(yields ~ (1| grrow) + (1|grrow:rows) + (1|repl) + (1|repl:columns) +
(1|grrow:repl) + (1|grrow:repl:rows) + (1|grrow:repl:columns) + (1|grrow:repl:rows:columns), data = dados.mat, REML = TRUE)
mod.reml <- lmer(yields ~ (1| grrow) + (1|grrow:rows) + (1|repl) + (1|repl:columns) +
(1|grrow:repl) + (1|grrow:repl:rows) + (1|grrow:repl:columns), data = dados.mat, REML = TRUE)
VarCorr(mod.reml)
0.71660^2
mod.reml <- lmer(yields ~ cultivars + (1| grrow) + (1|grrow:rows) + (1|repl) + (1|repl:columns) +
(1|grrow:repl) + (1|grrow:repl:rows) + (1|grrow:repl:columns), data = dados.mat, REML = TRUE)
VarCorr(mod.reml)
0.31392^1
0.31392^2
asreml(fixed = y ~ 1 + cultivars,
random = grrow + grrow:rows + repl + repl:columns + grrow:repl + grrow:repl:row + grrow:repl:columns,
data = dados.mat)
mod1 <- asreml(fixed = y ~ 1 + cultivars,
random = grrow + grrow:rows + repl + repl:columns + grrow:repl + grrow:repl:row + grrow:repl:columns,
data = dados.mat)
summary(mod1)
mod1 <- asreml(fixed = y ~ 1 + cultivars,
random = grrow:rows + repl:columns + grrow:repl + grrow:repl:row + grrow:repl:columns,
data = dados.mat)
mod.reml <- lmer(yields ~ cultivars + (1| grrow) + (1|grrow:rows) + (1|repl) + (1|repl:columns) +
(1|grrow:repl) + (1|grrow:repl:rows) + (1|grrow:repl:columns), data = dados.mat, REML = TRUE)
VarCorr(mod.reml)
mod1 <- asreml(fixed = y ~ 1 + cultivars,
random = grrow + grrow:rows + repl + repl:columns + grrow:repl + grrow:repl:row + grrow:repl:columns,
data = dados.mat)
str(dados.mat)
mod1 <- asreml(fixed = y ~ 1 + cultivars,
random = grrow + grrow:rows + repl + repl:columns + grrow:repl,
data = dados.mat)
yields <- c(13.906, 13.728, NA, 12.908, 13.848, 15.154, 15.151, 14.707,
12.938, 11.877, NA, 15.076, 11.680, 14.049, 13.696, 13.416,
12.340, 14.004, NA, 18.844, 14.029, 16.805, 15.630, 13.804,
16.277, 16.034, NA, 20.976, NA, 18.591, 17.431, 16.256,
17.055, 16.674, NA,19.087, 17.590, 21.145, 16.550, 17.188,
15.004, 14.767, NA, 16.302, 15.322, 16.886, 18.306, 17.694,
17.796, 15.583, NA, 18.390, 16.515, 18.879, 17.847, 18.211,
16.605, 15.280, NA, 16.397, 13.976, 15.616, 17.873, 17.366,
15.622, 11.539, NA, 15.227, 14.702, 17.086, 15.476, NA)
cultivars <- c(8,14, 11, 3, 1, 16, 23, 10,
15, 12, 17, 6, 24, 2, 9, 13,
22, 5, 20, 21, 4, 7, 18, 19,
4, 9, 13, 22, 11, 3, 5, 2,
23, 21, 7, 10, 15, 12, 1, 20,
6, 16, 8, 24, 18, 19, 17, 14,
20, 18, 16, 1, 22, 13, 12, 6,
3, 10, 15, 9, 17, 14, 4, 7,
24, 2, 5, 19, 23, 21, 8, 11)
grrow <- rep(1:4, 9, each=2)
rows <- rep(1:8, 9)
repl <- c(rep(1, 3*8),  rep(2, 3*8), rep(3, 3*8))
columns <- c(rep(1, 8), rep(2, 8), rep(3, 8), rep(4, 8), rep(5, 8), rep(6, 8), rep(7, 8), rep(8, 8), rep(9, 8))
dados.mat <- data.frame(grrow, rows, repl, columns, cultivars, yields)
yields <- c(13.906, 13.728, NA, 12.908, 13.848, 15.154, 15.151, 14.707,
12.938, 11.877, NA, 15.076, 11.680, 14.049, 13.696, 13.416,
12.340, 14.004, NA, 18.844, 14.029, 16.805, 15.630, 13.804,
16.277, 16.034, NA, 20.976, NA, 18.591, 17.431, 16.256,
17.055, 16.674, NA,19.087, 17.590, 21.145, 16.550, 17.188,
15.004, 14.767, NA, 16.302, 15.322, 16.886, 18.306, 17.694,
17.796, 15.583, NA, 18.390, 16.515, 18.879, 17.847, 18.211,
16.605, 15.280, NA, 16.397, 13.976, 15.616, 17.873, 17.366,
15.622, 11.539, NA, 15.227, 14.702, 17.086, 15.476, NA)
cultivars <- c(8,14, 11, 3, 1, 16, 23, 10,
15, 12, 17, 6, 24, 2, 9, 13,
22, 5, 20, 21, 4, 7, 18, 19,
4, 9, 13, 22, 11, 3, 5, 2,
23, 21, 7, 10, 15, 12, 1, 20,
6, 16, 8, 24, 18, 19, 17, 14,
20, 18, 16, 1, 22, 13, 12, 6,
3, 10, 15, 9, 17, 14, 4, 7,
24, 2, 5, 19, 23, 21, 8, 11)
grrow <- rep(1:4, 9, each=2)
rows <- rep(1:8, 9)
repl <- c(rep(1, 3*8),  rep(2, 3*8), rep(3, 3*8))
columns <- c(rep(1, 8), rep(2, 8), rep(3, 8), rep(4, 8), rep(5, 8), rep(6, 8), rep(7, 8), rep(8, 8), rep(9, 8))
dados.mat <- data.frame(grrow, rows, repl, columns, cultivars, yields)
dados.mat$grrow <- as.factor(dados.mat$grrow)
dados.mat$rows <- as.factor(dados.mat$rows)
dados.mat$columns <- as.factor(dados.mat$columns)
dados.mat$repl <- as.factor(dados.mat$repl)
dados.mat$cultivars <- as.factor(dados.mat$cultivars)
rm(columns,cultivars,grrow,repl, rows)
mod.reml <- lmer(yields ~ cultivars + (1| grrow) + (1|grrow:rows) + (1|repl) + (1|repl:columns) +
(1|grrow:repl) + (1|grrow:repl:rows) + (1|grrow:repl:columns), data = dados.mat, REML = TRUE)
mod1 <- asreml(fixed = y ~ 1 + cultivars,
random = grrow + grrow:rows + repl + repl:columns + grrow:repl + grrow:repl:row + grrow:repl:columns,
data = dados.mat)
colnames
colnames(dados.mat)
mod1 <- asreml(fixed = y ~ 1 + cultivars,
random = grrow + grrow:rows + repl + repl:columns + grrow:repl + grrow:repl:row + grrow:repl:columns,
data = dados.mat)
colnames(dados.mat) <- c("crirow", "rows", "repl", "columns", "cultivars", "yields")
mod1 <- asreml(fixed = y ~ 1 + cultivars,
random = crirow + crirow:rows + repl + repl:columns + crirow:repl + crirow:repl:row + crirow:repl:columns,
data = dados.mat)
str(dados.mat)
data.new <- cbind(dados.mat[,3], dados.mat[,c(1,2)], dados.mat[,4:6]
)
class(data.new)
str(data.new)
str(dados.mat)
data.new <- cbind("repl"=dados.mat[,3], dados.mat[,c(1,2)], dados.mat[,4:6])
class(data.new)
str(data.new)
mod1 <- asreml(fixed = y ~ 1 + cultivars,
random = crirow + crirow:rows + repl + repl:columns + crirow:repl + crirow:repl:row + crirow:repl:columns,
data = data.new)
mod1 <- asreml(fixed = y ~ 1 + cultivars,
random = ~crirow + crirow:rows + repl + repl:columns + crirow:repl + crirow:repl:row + crirow:repl:columns,
data = data.new)
mod1 <- asreml(fixed = y ~ 1 + cultivars,
random = ~crirow + crirow:rows + repl + repl:columns + crirow:repl + crirow:repl:row + crirow:repl:columns,
data = data.new)
str(data.new)
mod1 <- asreml(fixed = yields ~ 1 + cultivars,
random = ~crirow + crirow:rows + repl + repl:columns + crirow:repl + crirow:repl:row + crirow:repl:columns,
data = data.new)
str(data.new)
mod1 <- asreml(fixed = yields ~ 1 + cultivars,
random = ~crirow + crirow:rows + repl + repl:columns + crirow:repl + crirow:repl:rows + crirow:repl:columns,
data = data.new)
summary(mod1)
VarCorr(mod.reml)
0.31392^2
str(VarCorr(mod.reml))
var <- VarCorr(mod.reml)
var$repl
summary(mod1)
var$repl
var$`grrow:rows`
yields <- c(13.906, 13.728, NA, 12.908, 13.848, 15.154, 15.151, 14.707,
12.938, 11.877, NA, 15.076, 11.680, 14.049, 13.696, 13.416,
12.340, 14.004, NA, 18.844, 14.029, 16.805, 15.630, 13.804,
16.277, 16.034, NA, 20.976, NA, 18.591, 17.431, 16.256,
17.055, 16.674, NA,19.087, 17.590, 21.145, 16.550, 17.188,
15.004, 14.767, NA, 16.302, 15.322, 16.886, 18.306, 17.694,
17.796, 15.583, NA, 18.390, 16.515, 18.879, 17.847, 18.211,
16.605, 15.280, NA, 16.397, 13.976, 15.616, 17.873, 17.366,
15.622, 11.539, NA, 15.227, 14.702, 17.086, 15.476, NA)
cultivars <- c(8,14, 11, 3, 1, 16, 23, 10,
15, 12, 17, 6, 24, 2, 9, 13,
22, 5, 20, 21, 4, 7, 18, 19,
4, 9, 13, 22, 11, 3, 5, 2,
23, 21, 7, 10, 15, 12, 1, 20,
6, 16, 8, 24, 18, 19, 17, 14,
20, 18, 16, 1, 22, 13, 12, 6,
3, 10, 15, 9, 17, 14, 4, 7,
24, 2, 5, 19, 23, 21, 8, 11)
grrow <- rep(1:4, 9, each=2)
rows <- rep(1:8, 9)
repl <- c(rep(1, 3*8),  rep(2, 3*8), rep(3, 3*8))
columns <- c(rep(1, 8), rep(2, 8), rep(3, 8), rep(4, 8), rep(5, 8), rep(6, 8), rep(7, 8), rep(8, 8), rep(9, 8))
dados.mat <- data.frame(grrow, rows, repl, columns, cultivars, yields)
dados.mat$grrow <- as.factor(dados.mat$grrow)
dados.mat$rows <- as.factor(dados.mat$rows)
dados.mat$columns <- as.factor(dados.mat$columns)
dados.mat$repl <- as.factor(dados.mat$repl)
dados.mat$cultivars <- as.factor(dados.mat$cultivars)
summary(aov(yields ~ cultivars + grrow + grrow:rows + repl + repl:columns + grrow:repl + grrow:repl:rows + grrow:repl:columns + grrow:repl:rows:columns, dados.mat))
mod.reml <- lmer(yields ~ cultivars + (1| grrow) + (1|grrow:rows) + (1|repl) + (1|repl:columns) +
(1|grrow:repl) + (1|grrow:repl:rows) + (1|grrow:repl:columns), data = dados.mat, REML = TRUE)
mod1 <- asreml(fixed = yields ~ 1 + cultivars,
random = ~crirow + crirow:rows + repl + repl:columns + crirow:repl + crirow:repl:rows + crirow:repl:columns,
data = dados.mat)
colnames(dados.mat)
mod1 <- asreml(fixed = yields ~ 1 + cultivars,
random = ~grrow + grrow:rows + repl + repl:columns + grrow:repl + grrow:repl:rows + grrow:repl:columns,
data = dados.mat)
summary(mod1)
mod1 <- asreml(fixed = yields ~ 1 + cultivars,
random = ~grrow + grrow:rows + repl + repl:columns + grrow:repl +
grrow:repl:rows + grrow:repl:columns,
n= 2,
data = dados.mat)
mod1 <- asreml(fixed = yields ~ 1 + cultivars,
random = ~grrow + grrow:rows + repl + repl:columns + grrow:repl +
grrow:repl:rows + grrow:repl:columns,
i= 2,
data = dados.mat)
summary(mod1)
mod1 <- asreml(fixed = yields ~ 1 + cultivars,
random = ~grrow + grrow:rows + repl + repl:columns + grrow:repl +
grrow:repl:rows + grrow:repl:columns,
i= -1,
data = dados.mat)
summary(mod1)
mod1 <- asreml(fixed = yields ~ 1 + cultivars,
random = ~grrow + grrow:rows + repl + repl:columns + grrow:repl +
grrow:repl:rows + grrow:repl:columns,
i= 1,
data = dados.mat)
summary(mod1)
mod2 <- asreml(fixed = yields ~ 1 + cultivars + repl,
random = ~grrow + grrow:rows + repl:columns + grrow:repl +
grrow:repl:rows + grrow:repl:columns,
i= 1,
data = dados.mat)
summary(mod2)
str(dados.mat)
View(dados.mat)
source('~/.active-rstudio-document', echo=TRUE)
yields <- c(13.906, 13.728, NA, 12.908, 13.848, 15.154, 15.151, 14.707,
12.938, 11.877, NA, 15.076, 11.680, 14.049, 13.696, 13.416,
12.340, 14.004, NA, 18.844, 14.029, 16.805, 15.360, 13.804,
16.277, 16.034, NA, 20.976, NA, 18.591, 17.431, 16.256,
17.055, 16.674, NA, 19.087, 17.590, 21.145, 16.550, 17.188,
15.004, 14.767, NA, 16.302, 15.322, 16.886, 18.306, 17.964,
17.796, 16.583, NA, 18.390, 16.515, 18.879, 17.847, 18.211,
16.605, 15.280, NA, 16.397, 13.976, 15.616, 17.873, 17.366,
15.622, 11.539, NA, 15.227, 14.702, 17.086, 15.476, NA)
cultivars <- c(8,14, 11, 3, 1, 16, 23, 10,
15, 12, 17, 6, 24, 2, 9, 13,
22, 5, 20, 21, 4, 7, 18, 19,
4, 9, 13, 22, 11, 3, 5, 2,
23, 21, 7, 10, 15, 12, 1, 20,
6, 16, 8, 24, 18, 19, 17, 14,
20, 18, 16, 1, 22, 13, 12, 6,
3, 10, 15, 9, 17, 14, 4, 7,
24, 2, 5, 19, 23, 21, 8, 11)
grrow <- rep(1:4, 9, each=2)
rows <- rep(1:8, 9)
repl <- c(rep(1, 3*8),  rep(2, 3*8), rep(3, 3*8))
columns <- c(rep(1, 8), rep(2, 8), rep(3, 8), rep(4, 8),
rep(5, 8), rep(6, 8), rep(7, 8), rep(8, 8), rep(9, 8))
dados.mat <- data.frame(grrow, rows, repl, columns, cultivars, yields)
dados.mat$grrow <- as.factor(dados.mat$grrow)
dados.mat$rows <- as.factor(dados.mat$rows)
dados.mat$columns <- as.factor(dados.mat$columns)
dados.mat$repl <- as.factor(dados.mat$repl)
dados.mat$cultivars <- as.factor(dados.mat$cultivars)
require(lme4)
mod.reml <- lmer(yields ~ 0 + cultivars + (1| grrow) + (1|grrow:rows)
+ (1|repl) + (1|repl:columns) +  (1|grrow:repl) +
(1|grrow:repl:rows) + (1|grrow:repl:columns),
data = dados.mat, REML = TRUE)
VarCorr(mod.reml)
fixef(mod.reml)[order(fixef(mod.reml))]
require(asreml)
mod1 <- asreml(fixed = yields ~ 0 + cultivars,
random = ~ grrow + grrow:rows + repl +
repl:columns + grrow:repl +
grrow:repl:rows + grrow:repl:columns,
data = dados.mat)
summary(mod1)
adj_mean <- summary(mod1, all=TRUE)$coef.fixed[,1]
adj_mean[order(adj_mean)]
install.packages("MDSMap")
install.packages("rgl")
source("http://bioconductor.org/biocLite.R")
biocLite("rgl")
install.packages("MDSMap")
install.packages("MDSMap")
library(MDSMap)
fname<-‘bcsim’
fname <- ‘bcsim’
fname <- "bcsim"
sim.bc.rflod.file(fname)
map.s<-estimate.map(fname,p=100,n=NULL,ispc=FALSE,displaytext=FALSE)
map.s<-estimate.map(fname,p=100,n=NULL,ispc=FALSE,displaytext=TRUE)
map.s$locimap$
map.s$locimap$
)
map.s$locimap
str(fname)
str(bcsim)
str(fname)
str(sim.bc.rflod.file(fname))
fname
fname <- "bcsim"
sim.bc.rflod.file(fname)
fname
test <- sim.bc.rflod.file(fname)
str(test)
str(map.s)
sim.bc.rflod.file
map2d<-estimate.map(fname,p=NULL,n=NULL,ispc=TRUE,ndim=2,displaytext=FALSE)
fname<-system.file("extdata", "lgI.txt", package="MDSMap")
map2d<-estimate.map(fname,p=NULL,n=NULL,ispc=TRUE,ndim=2,displaytext=FALSE)
map3d<-estimate.map(fname,p=NULL,n=NULL,ispc=TRUE,ndim=3,displaytext=FALSE)
install.packages("tidyverse")
install.packages("corpcor")
install.packages("pedigree")
install.packages("kinship2")
install.packages("")
install.packages("rrBLUP")
install.packages("BGLR")
install.packages("bnlearn")
library("biomaRt")
library("readxl")
library("org.Bt.eg.db")
library("GOstats")
library("meshr")
library("MeSH.db")
library("MeSH.Bta.eg.db")
library("corrplot")
library("meshes")
library("GOSemSim")
library("tagcloud")
library("RColorBrewer")
install.package("org.Bt.eg.db")
install.package("GOstats")
install.package("meshr")
install.package("MeSH.db")
install.package("MeSH.Bta.eg.db")
install.package("corrplot")
install.package("meshes")
install.package("GOSemSim")
install.package("tagcloud")
source("https://bioconductor.org/biocLite.R")
biocLite("org.Bt.eg.db")
library("biomaRt")
library("readxl")
library("org.Bt.eg.db")
library("GOstats")
biocLite("GOstats")
library("GOstats")
library("meshr")
biocLite("meshr")
?file.path
?find_root_file
library("GOstats")
library("meshr")
library("MeSH.db")
library("MeSH.Bta.eg.db")
biocLite("MeSH.Bta.eg.db")
library("MeSH.Bta.eg.db")
library("corrplot")
library("meshes")
biocLite("meshes")
library("meshes")
library("GOSemSim")
library("tagcloud")
biocLite("tagcloud")
library("biomaRt")
library("readxl")
library("org.Bt.eg.db")
library("GOstats")
library("meshr")
library("MeSH.db")
library("MeSH.Bta.eg.db")
library("corrplot")
library("meshes")
library("GOSemSim")
library("tagcloud")
library("RColorBrewer")
library(corrplot)
goListBP <- summary(BP)[, c(1)][1:50]  # top 50
d.goBP <- godata("org.Bt.eg.db", ont = "BP", computeIC = TRUE)
goSimMatBP <- mgoSim(goListBP, goListBP, semData = d.goBP, measure = "Wang",
combine = NULL)
corrplot(goSimMatBP, is.corr = FALSE, type = "lower", tl.col = "black", tl.cex = 0.5)
install.packages("googleformr")
form_id <- "https://docs.google.com/forms/d/1O7IwwrXgZCGoBrUCPzt3SVvW9XerfVg2J_6_fbzVqmU/"
post_answers <- gformr(form_id)
library(googleformr)
post_answers <- gformr(form_id)
get_form_str(form_id)
post_this <- c("um", "texto dois")
post_answers(post_content=post_this)
1:7
clone <- c("GRA02", "URO01", "URO03", "GRA02", "GRA01", "URO01")
clone_fator <- as.factor(clone)
str(clone_fator)
levels(clone_fator)
help("array")
minha_lista <- list(campo1, tapply(campo1$altura, campo1$idade, mean), W)
minha_lista <- list(campo1 = campo1, media_alt = tapply(campo1$altura, campo1$idade, mean), matrix_ex = W)
meu_array <- array(1:12, dim = c(2,3,4))
meu_array
(meu_array <- array(1:12, dim = c(2,3,2,2)))
(meu_array <- array(1:12, dim = c(2,3,2,4)))
(meu_array <- array(1:12, dim = c(2,3,4)))
(meu_array <- array(1:24, dim = c(2,3,4)))
(meu_array <- array(1:24, dim = c(2,3,5)))
(meu_array <- array(1:24, dim = c(2,3,4)))
ex_mat <- matrix(seq(0,21,3), nrow = 2)
lapply(ex_mat, sum,2 )
lapply(ex_mat, sum,1)
dim(ex_mat)
lapply(ex_mat, sum,1)
ex_mat
?lapply
lapply(ex_mat, sum)
lapply(ex_mat, sum,2)
seq(0,42,4)
seq(0,21,3)
seq(0,42,5)
seq(0,41,5)
seq(0,39,5)
seq(0,13,2)
seq(0,14,2)
ex_list <- list(A=matrix(seq(0,21,3), nrow = 2),
B=matrix(seq(0,14,2), nrow = 2),
C= matrix(seq(0,39,5), nrow = 2))
dim(ex_mat)
str(ex_mat)
str(ex_list)
lapply(ex_list, "[",2)
lapply(ex_list, "[",, 2)
ex_list
lapply(ex_list, "[", 1, 2)
sapply(ex_list, "[", , 2)
sapply(ex_list, "[",1 , 2)
mapply(rep,1,4)
mapply(rep,1:2,4)
mapply(seq,1:2,4)
sapply(ex_list, "[",1)
sapply(ex_list, "[",1,3)
dados <- read.csv(file = "respostas.csv", stringsAsFactors = FALSE, na.strings="-")
setwd("~/github/gvenck.github.io/cursoR")
dados <- read.csv(file = "respostas.csv", stringsAsFactors = FALSE, na.strings="-")
colnames(dados) <- c("Data_pesq", "Idade", "Niver", "Genero", "Cidade",
"Altura","Peso", "Area", "ConhecimentoR", "Outras_linguagens",
"Utilizacao", "Motivacao")
str(dados)
dados$Area <- as.factor(dados$Area)
tapply(dados$ConhecimentoR, dados$Area, mean)
prim_funcao <- function(x,y){
print(x,y)
}
prim_funcao(3,5)
prim_funcao <- function(x,y){
cat(x,y)
}
prim_funcao(3,5)
myfuncao(3,5)
myfuncao <- function(x,y){
cat(x,y)
}
myfuncao(3,5)
myfuncao(4,1)
str(dados)
myfuncao(3,5)
myfuncao <- function(x,y){
cat(x,y)
return(x+y)
}
myfuncao(3,5)
myfuncao <- function(x,y){
cat(x,y,"\n")
return(x+y)
}
myfuncao(3,5)
myfuncao(4,1)
